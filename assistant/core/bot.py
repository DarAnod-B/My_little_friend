import asyncio
from assistant.core.task_manager import TaskManager
from assistant.core.state_manager import StateManager
from assistant.core.command_handler import CommandHandler
from assistant.modules.speech.wake_word import WakeWordDetector
from assistant.modules.speech.recorder import Recorder
from assistant.modules.speech.stt import SpeechProcessor
from assistant.modules.tts.pyttsx3_engine import TextToSpeech
from assistant.utils.logger import logger
from assistant.utils.config import Config

class Bot:
    def __init__(self):
        self.task_manager = TaskManager()
        self.state_manager = StateManager()
        self.command_handler = CommandHandler()
        self.wake_word_detector = WakeWordDetector(Config.WAKE_WORD)
        self.recorder = Recorder()
        self.tts = TextToSpeech()
        self.speech_processor = SpeechProcessor()  # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç SpeechProcessor

    async def start(self):
        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏...")

        while True:
            if self.wake_word_detector.detect():  # –û–∂–∏–¥–∞–Ω–∏–µ –∫–ª—é—á–µ–≤–æ–π —Ñ—Ä–∞–∑—ã
                logger.info("üé§ –ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
                self.recorder.record()  # –ó–∞–ø–∏—Å—å –∫–æ–º–∞–Ω–¥—ã

                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏ intent
                command_data = self.speech_processor.speech_to_text()
                command_text = command_data["text"]
                intent = command_data["intent"]

                if command_text:
                    logger.info(f"üìù –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {command_text}")
                    logger.info(f"ü§ñ –û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π intent: {intent}")

                    # –ü–µ—Ä–µ–¥–∞—ë–º intent –≤ CommandHandler
                    response = await self.command_handler.handle(intent)
                    self.tts.speak(response)  # –û–∑–≤—É—á–∏–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                else:
                    logger.warning("‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞")

if __name__ == "__main__":
    bot = Bot()
    asyncio.run(bot.start())