from assistant.modules.speech.wake_word import WakeWordDetector
from assistant.modules.speech.recorder import Recorder
from assistant.core.command_handler import CommandHandler
from assistant.modules.speech.stt import SpeechProcessor
from assistant.utils.logger import logger
from assistant.modules.tts.pyttsx3_engine import TextToSpeech


class Bot:
    def __init__(self):
        self.wake_word_detector = WakeWordDetector()  # –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∫–ª—é—á–µ–≤–æ–π —Ñ—Ä–∞–∑—ã
        self.recorder = Recorder()  # –ó–∞–ø–∏—Å—å –∞—É–¥–∏–æ
        self.speech_processor = SpeechProcessor()  # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –≤ —Ç–µ–∫—Å—Ç
        self.command_handler = CommandHandler()  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
        self.tts = TextToSpeech()  # TTS-–¥–≤–∏–∂–æ–∫


    async def start(self):
        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏...")

        while True:
            # –û–∂–∏–¥–∞–Ω–∏–µ –∫–ª—é—á–µ–≤–æ–π —Ñ—Ä–∞–∑—ã
            if self.wake_word_detector.detect():
                logger.info("üîπ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø–æ –∫–ª—é—á–µ–≤–æ–π —Ñ—Ä–∞–∑–µ!")

                # –ó–∞–ø–∏—Å—å –∫–æ–º–∞–Ω–¥—ã
                self.recorder.record()

                # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –≤ —Ç–µ–∫—Å—Ç
                user_input = self.speech_processor.speech_to_text()
                logger.info(f"üìù –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {user_input}")

                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã
                response = await self.command_handler.handle(user_input)
                logger.info(f"ü§ñ –û—Ç–≤–µ—Ç: {response}")

                if response:  # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—Ç–≤–µ—Ç
                    self.tts.speak(response)  # –û–∑–≤—É—á–∏–≤–∞–µ–º –µ–≥–æ
